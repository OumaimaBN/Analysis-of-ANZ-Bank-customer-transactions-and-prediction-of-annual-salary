{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Task2- Predictive Analytics","provenance":[],"authorship_tag":"ABX9TyOFSayTR0H2nyDrbY6mvG+p"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qEpT2590Qhkv","executionInfo":{"status":"ok","timestamp":1611862727070,"user_tz":-60,"elapsed":40987,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"f1d497f4-d41e-46ed-d824-f8f4f104edcc"},"source":["import os\r\n","import random\r\n","from google.colab import drive\r\n","drive.mount('/content/drive')\r\n","%cd /content/drive/My Drive/Colab-Notebooks/data@anz"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n","/content/drive/My Drive/Colab-Notebooks/data@anz\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"0XpzND0_RYGG"},"source":["import pandas as pd\r\n","\r\n","import numpy as np\r\n","import math\r\n","\r\n","import seaborn as sns\r\n","import matplotlib.pyplot as plt"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9L1f-gVMRcJo"},"source":["df = pd.read_excel('./data/ANZ-synthesised-transaction-dataset.xlsx')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Utpt5cAVSbmJ"},"source":["## Data Cleaning"]},{"cell_type":"markdown","metadata":{"id":"yq3w8WYcSgbW"},"source":["### Missing data"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Dl_VR3gETo6j","executionInfo":{"status":"ok","timestamp":1611862731348,"user_tz":-60,"elapsed":45197,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"647a92a9-452c-41b0-e7ed-c5d5bdeeeb14"},"source":["# Percentage of missing values in each column\r\n","round(df.isnull().sum() / df.shape[0] * 100,2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["status                0.00\n","card_present_flag    35.92\n","bpay_biller_code     92.65\n","account               0.00\n","currency              0.00\n","long_lat              0.00\n","txn_description       0.00\n","merchant_id          35.92\n","merchant_code        92.67\n","first_name            0.00\n","balance               0.00\n","date                  0.00\n","gender                0.00\n","age                   0.00\n","merchant_suburb      35.92\n","merchant_state       35.92\n","extraction            0.00\n","amount                0.00\n","transaction_id        0.00\n","country               0.00\n","customer_id           0.00\n","merchant_long_lat    35.92\n","movement              0.00\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"_JgHCX8tS7Ts"},"source":["we constate that there is a lot of missing data (>90%) in columns bpay_biller_code and merchant_code so it is better to delete all columns that contains more than 70% of missing values"]},{"cell_type":"code","metadata":{"id":"4YYpjpHQS2XE"},"source":["for c in df.columns:\r\n","    if (100.0 * df[c].isna().sum() / df.shape[0]) > 70:\r\n","        df.drop(c,1,inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1mY_zgWJVslO"},"source":["### Predictive Analytics"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FbYjD9I3by4B","executionInfo":{"status":"ok","timestamp":1611862731349,"user_tz":-60,"elapsed":45167,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"4f71946e-b9dd-4045-f619-41aa28aa6220"},"source":["#change the dtype of date column to datetime\r\n","df['date'] = pd.to_datetime(df['date'])\r\n","df.date.unique()[0]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["numpy.datetime64('2018-08-01T00:00:00.000000000')"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8j4XpFPOb7TS","executionInfo":{"status":"ok","timestamp":1611862731349,"user_tz":-60,"elapsed":45155,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"5d895e16-2388-44c6-ec0a-1da3c85e8b3b"},"source":["#add three new columns (year, month, day) from the date transactionn \r\n","df['day']= df['date'].dt.day_name()\r\n","df['month'] = df['date'].dt.month_name()\r\n","df['year'] = df['date'].dt.year\r\n","df.columns[-3:]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['day', 'month', 'year'], dtype='object')"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-WWpclXAHtgT","executionInfo":{"status":"ok","timestamp":1611862731349,"user_tz":-60,"elapsed":45145,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"ba3fde65-d500-4a0c-b026-eb635cf67a7e"},"source":["\r\n","# this is each customer's 3 months salary \r\n","df.groupby('customer_id')['amount'].sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["customer_id\n","CUS-1005756958    16268.97\n","CUS-1117979751    33984.37\n","CUS-1140341822    17010.60\n","CUS-1147642491    28980.82\n","CUS-1196156254    36050.72\n","                    ...   \n","CUS-72755508      11438.37\n","CUS-809013380     18810.09\n","CUS-860700529     18099.88\n","CUS-880898248     11462.45\n","CUS-883482547     36639.41\n","Name: amount, Length: 100, dtype: float64"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"kXNqcAGDkq-Q"},"source":["\r\n","# selecting important featuers\r\n","df=df[[\"customer_id\",\"age\",\"txn_description\",\"balance\",\"amount\", 'gender']]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kyLlCeMoAkeF","executionInfo":{"status":"ok","timestamp":1611862731713,"user_tz":-60,"elapsed":45483,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"bb061171-f1ff-4385-8a88-9db09bfa1247"},"source":["print(df['txn_description'].unique())\r\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["['POS' 'SALES-POS' 'PAYMENT' 'INTER BANK' 'PAY/SALARY' 'PHONE BANK']\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"yPtKsKN0AuYv"},"source":["#### The annual salary of each customer"]},{"cell_type":"code","metadata":{"id":"ZiB79WT7Anb-","colab":{"base_uri":"https://localhost:8080/","height":106},"executionInfo":{"status":"ok","timestamp":1611862731714,"user_tz":-60,"elapsed":45463,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"e653ebf7-bdba-483e-9dc3-14587c45d5bc"},"source":["salary=df[df[\"txn_description\"] == \"PAY/SALARY\"]\r\n","salary.head(2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customer_id</th>\n","      <th>age</th>\n","      <th>txn_description</th>\n","      <th>balance</th>\n","      <th>amount</th>\n","      <th>gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>50</th>\n","      <td>CUS-1462656821</td>\n","      <td>23</td>\n","      <td>PAY/SALARY</td>\n","      <td>8342.11</td>\n","      <td>3903.95</td>\n","      <td>M</td>\n","    </tr>\n","    <tr>\n","      <th>61</th>\n","      <td>CUS-2500783281</td>\n","      <td>23</td>\n","      <td>PAY/SALARY</td>\n","      <td>2040.58</td>\n","      <td>1626.48</td>\n","      <td>F</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       customer_id  age txn_description  balance   amount gender\n","50  CUS-1462656821   23      PAY/SALARY  8342.11  3903.95      M\n","61  CUS-2500783281   23      PAY/SALARY  2040.58  1626.48      F"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gLX-TVsFIT5F","executionInfo":{"status":"ok","timestamp":1611862731715,"user_tz":-60,"elapsed":45439,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"37872243-dd2d-470d-e972-ffd4df8f5378"},"source":["# customer's annual salaries\r\n","salaries = df[df[\"txn_description\"] == \"PAY/SALARY\"].groupby(\"customer_id\").mean()\r\n","#salaries.head()\r\n","sal =[]\r\n","for customer_id in salary['customer_id']:\r\n","    sal.append(int(salaries.loc[customer_id]['amount'].sum()))\r\n","salary['annual_salary'] = sal"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  import sys\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"xJped6XdCwIK"},"source":["#### Relation between salary and age"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"id":"sKUt_BWyIojC","executionInfo":{"status":"ok","timestamp":1611862733081,"user_tz":-60,"elapsed":46793,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"ca94bca3-9ed3-42c1-9520-d8cf693d3c79"},"source":["plt.figure(figsize=[15, 5])\r\n","sns.barplot(x= 'age', y=\"annual_salary\", data=salary , palette = 'magma')\r\n","plt.title('annual salary of customers by age');"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"lJPSkWH_Cy3G"},"source":["#### Relation between salary and gender"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":187},"id":"t9dIUOnwC2XR","executionInfo":{"status":"error","timestamp":1614458961615,"user_tz":-60,"elapsed":953,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"7adf48cc-0faf-45c1-b92f-df34f5db5d78"},"source":["sns.catplot(x=\"gender\", y=\"annual_salary\", kind=\"bar\", data=salary, palette = 'magma')\r\n","plt.title('average annual salary amount per gender');"],"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-b63459cddc20>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcatplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"gender\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"annual_salary\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkind\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"bar\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msalary\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpalette\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'magma'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'average annual salary amount per gender'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m;\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'sns' is not defined"]}]},{"cell_type":"markdown","metadata":{"id":"vktpGRzLC56-"},"source":["we can say that Males have the highest salaries than Females"]},{"cell_type":"markdown","metadata":{"id":"89BNGInGBPMO"},"source":["#### Correlation between annual salary and customers attributes"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i6ZKOHu7PncN","executionInfo":{"status":"ok","timestamp":1611862733544,"user_tz":-60,"elapsed":47231,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"f6903a4c-5093-4d9c-cd15-96eec0e2d922"},"source":["salary['gender'] = pd.get_dummies(salary['gender'], drop_first=True)\r\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":346},"id":"ewI8CoswA5Oh","executionInfo":{"status":"ok","timestamp":1611862733946,"user_tz":-60,"elapsed":47626,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"1a27d949-04d0-4d00-8cf2-e5a8615faaf3"},"source":["# Plotting the correlation heatmap \r\n","sns.heatmap(salary.corr() ,vmax=.3 ,annot=True, center=0, cmap=\"nipy_spectral\", square=True, linewidths=.5)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd930030898>"]},"metadata":{"tags":[]},"execution_count":17},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"bvVjAOIDBcnQ"},"source":["### Regression Model"]},{"cell_type":"code","metadata":{"id":"slDHcUQ7BkcE"},"source":["\r\n","from sklearn.model_selection import train_test_split\r\n","from sklearn.linear_model import LinearRegression\r\n","from sklearn.tree import DecisionTreeRegressor"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bYcC5NMRB7r2","executionInfo":{"status":"ok","timestamp":1611862733947,"user_tz":-60,"elapsed":47602,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"d31e2c62-7ee4-4cd0-b80e-300774d2886d"},"source":["X = salary[['age','gender', 'balance','amount']]\r\n","y = salary['annual_salary']\r\n","\r\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)\r\n","X_train\r\n","y_train"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3850     1225\n","1883     1395\n","5728     1138\n","8571     1225\n","234      1630\n","         ... \n","9507     3328\n","11878    1099\n","3609     1395\n","8598     1560\n","7614     3785\n","Name: annual_salary, Length: 618, dtype: int64"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"ti30xCpBDXdu"},"source":["lr = LinearRegression()\r\n","lr.fit(X_train, y_train) # Fit the model\r\n","y_pred_train_reg = lr.predict(X_train)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wEcaMBlCD6fk","executionInfo":{"status":"ok","timestamp":1611862734266,"user_tz":-60,"elapsed":47898,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"58d63456-a570-47b8-d5e0-2ac467f27be1"},"source":["print(\"Model accuracy on Train Data\", (lr.score(X_train , y_train)*100))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model accuracy on Train Data 99.99999396689734\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z2pHYiatDZj3","executionInfo":{"status":"ok","timestamp":1611862734267,"user_tz":-60,"elapsed":47888,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"c841c649-b650-405f-af10-4d839517b054"},"source":["y_pred = lr.predict(X_test)\r\n","print(\"Model accuracy on Test Data\", (lr.score(X_test , y_test)*100))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model accuracy on Test Data 99.99999548094883\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"7L9XH22hExaN"},"source":["### Decision Tree Regressor"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zG9WIojsDp95","executionInfo":{"status":"ok","timestamp":1611862734267,"user_tz":-60,"elapsed":47878,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"b9e46698-5daf-4025-c1a0-8084bbb875c1"},"source":["dt = DecisionTreeRegressor()\r\n","\r\n","dt.fit(X_train, y_train)\r\n","y_pred_train_dtr = dt.predict(X_train)\r\n","print(\"Model accuracy on Train Data\", (dt.score(X_train , y_train)*100))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model accuracy on Train Data 100.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G5E2-GkbE4Im","executionInfo":{"status":"ok","timestamp":1611862734268,"user_tz":-60,"elapsed":47867,"user":{"displayName":"Oumaima Bentakhou","photoUrl":"","userId":"01825343906551194122"}},"outputId":"e1885200-a80b-4706-c1a6-51c611c490d1"},"source":["dt.predict(X_test)\r\n","print(\"Model accuracy on Test Data\", (dt.score(X_test , y_test)*100)) \r\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model accuracy on Test Data 99.99614478316194\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Q3y60-nyhFFr"},"source":["# Conclusion"]},{"cell_type":"markdown","metadata":{"id":"DieorYRwhUpK"},"source":["Both LinearRegression and DecisionTree have a great score in predicting new data, so ANZ can use them to segment new clients"]}]}